From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Michael Goffioul <michael.goffioul@gmail.com>
Date: Wed, 28 Sep 2022 08:13:21 +0200
Subject: [PATCH 19/19] Add media extensions for FFMPEG codec2 service

A plain buffer is used to transfer extra information from extractor to
codecs. The buffer is mapped to a custom C2 paramkey.

Change-Id: Id9e36ae90b194b2973ed16af07a9e2b5230aaab7
---
 media/codec2/core/include/C2Config.h                      | 8 ++++++++
 media/codec2/sfplugin/CCodecConfig.cpp                    | 5 +++++
 media/libstagefright/FFMPEGUtil.cpp                       | 1 +
 media/libstagefright/Utils.cpp                            | 1 +
 .../include/media/stagefright/MetaDataBase.h              | 1 +
 5 files changed, 16 insertions(+)

diff --git a/media/codec2/core/include/C2Config.h b/media/codec2/core/include/C2Config.h
index 6ff3dbc90b..cefa57bd5c 100644
--- a/media/codec2/core/include/C2Config.h
+++ b/media/codec2/core/include/C2Config.h
@@ -284,6 +284,9 @@ enum C2ParamIndexKind : C2Param::type_index_t {
 
     // allow tunnel peek behavior to be unspecified for app compatibility
     kParamIndexTunnelPeekMode, // tunnel mode, enum
+
+    // FFMPEG
+    kParamIndexRawCodecData,
 };
 
 }
@@ -2538,6 +2541,11 @@ typedef C2StreamParam<C2Info, C2SimpleValueStruct<int32_t>, kParamIndexAverageBl
         C2AndroidStreamAverageBlockQuantizationInfo;
 constexpr char C2_PARAMKEY_AVERAGE_QP[] = "coded.average-qp";
 
+// FFMEG
+
+typedef C2StreamParam<C2Info, C2BlobValue, kParamIndexRawCodecData> C2StreamRawCodecDataInfo;
+constexpr char C2_PARAMKEY_RAW_CODEC_DATA[] = "coded.raw-codec-data";
+
 /// @}
 
 #endif  // C2CONFIG_H_
diff --git a/media/codec2/sfplugin/CCodecConfig.cpp b/media/codec2/sfplugin/CCodecConfig.cpp
index 5208be67d9..571cfdc3b2 100644
--- a/media/codec2/sfplugin/CCodecConfig.cpp
+++ b/media/codec2/sfplugin/CCodecConfig.cpp
@@ -1025,6 +1025,11 @@ void CCodecConfig::initializeStandardParams() {
     KEY_AUDIO_SESSION_ID // we use "audio-hw-sync"
     KEY_OUTPUT_REORDER_DEPTH
     */
+
+    // FFMPEG
+
+    add(ConfigMapper("raw-codec-data", C2_PARAMKEY_RAW_CODEC_DATA, "value")
+        .limitTo(D::DECODER & D::CODED));
 }
 
 status_t CCodecConfig::initialize(
diff --git a/media/libstagefright/FFMPEGUtil.cpp b/media/libstagefright/FFMPEGUtil.cpp
index 76a7658520..1958196b83 100644
--- a/media/libstagefright/FFMPEGUtil.cpp
+++ b/media/libstagefright/FFMPEGUtil.cpp
@@ -46,6 +46,7 @@ static const MetaKeyEntry MetaKeyTable[] {
    {kKeyCodecId              , "codec-id"               , INT32},
    {kKeyCodedSampleBits      , "coded-sample-bits"      , INT32},
    {kKeyFileFormat           , "file-format"            , INT32},
+   {kKeyRawCodecData         , "raw-codec-data"         , DATA},
    {kKeyRawCodecSpecificData , "raw-codec-specific-data", CSD},
    {kKeyPcmEncoding          , "pcm-encoding"           , INT32},
    {kKeyRVVersion            , "rv-version"             , INT32},
diff --git a/media/libstagefright/Utils.cpp b/media/libstagefright/Utils.cpp
index d7fe5c6806..ab3e4b97e4 100644
--- a/media/libstagefright/Utils.cpp
+++ b/media/libstagefright/Utils.cpp
@@ -832,6 +832,7 @@ static std::vector<std::pair<const char *, uint32_t>> bufferMappings {
         { "slow-motion-markers", kKeySlowMotionMarkers },
         { "thumbnail-csd-av1c", kKeyThumbnailAV1C },
         // FFMEG
+        { "raw-codec-data", kKeyRawCodecData },
         { "raw-codec-specific-data", kKeyRawCodecSpecificData },
     }
 };
diff --git a/media/libstagefright/include/media/stagefright/MetaDataBase.h b/media/libstagefright/include/media/stagefright/MetaDataBase.h
index 2ade1515d8..000a8a132b 100644
--- a/media/libstagefright/include/media/stagefright/MetaDataBase.h
+++ b/media/libstagefright/include/media/stagefright/MetaDataBase.h
@@ -145,6 +145,7 @@ enum {
 
     kKeyIsUnreadable      = 'unre',  // bool (int32_t)
 
+    kKeyRawCodecData         = 'rcdt',
     kKeyRawCodecSpecificData = 'rcsd',  // raw data - added to support mmParser
     kKeyDivXVersion       = 'DivX',  // int32_t
     kKeyDivXDrm           = 'QDrm',  // void *
