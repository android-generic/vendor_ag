From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Ma Jian <majian@jidemail.com>
Date: Sun, 12 Jun 2016 15:13:55 +0800
Subject: [PATCH 07/20] Support save local time to RTC

Make it work for dual boot with Windows, we could set property
persist.rtc_local_time to 1, so that RemixOS and Windows both
use local time in rtc.

NO_REF_TASK
Tested:
1) set time in android, reboot to bios, make sure the time in bois is
   local time
2) reboot back to android, the current time should be correct local time
   (this need another change)

Change-Id: Id2c0ce150fb9320b132ad8bdd83b38dcae1070db
---
 apex/jobscheduler/service/jni/Android.bp       |  1 +
 ...ndroid_server_alarm_AlarmManagerService.cpp | 18 +++++++++++++++---
 2 files changed, 16 insertions(+), 3 deletions(-)

diff --git a/apex/jobscheduler/service/jni/Android.bp b/apex/jobscheduler/service/jni/Android.bp
index 34a1fa2ebc13..28acb56dd853 100644
--- a/apex/jobscheduler/service/jni/Android.bp
+++ b/apex/jobscheduler/service/jni/Android.bp
@@ -26,6 +26,7 @@ cc_library_shared {
     shared_libs: [
         "libnativehelper",
         "liblog",
+        "libcutils",
         "libbase",
     ],
 }
diff --git a/apex/jobscheduler/service/jni/com_android_server_alarm_AlarmManagerService.cpp b/apex/jobscheduler/service/jni/com_android_server_alarm_AlarmManagerService.cpp
index 8f9e187a7a93..baa1317ec8ff 100644
--- a/apex/jobscheduler/service/jni/com_android_server_alarm_AlarmManagerService.cpp
+++ b/apex/jobscheduler/service/jni/com_android_server_alarm_AlarmManagerService.cpp
@@ -39,6 +39,7 @@
 #include <unistd.h>
 #include <linux/ioctl.h>
 #include <linux/rtc.h>
+#include <cutils/properties.h>
 
 #include <array>
 #include <limits>
@@ -145,9 +146,20 @@ int AlarmImpl::setTime(struct timeval *tv)
     }
 
     struct tm tm;
-    if (!gmtime_r(&tv->tv_sec, &tm)) {
-        ALOGV("gmtime_r() failed: %s", strerror(errno));
-        return -1;
+
+    // @jide when persist.rtc_local_time is set to 1, we store the localtime to rtc
+    //
+    bool rtc_local_time = property_get_bool("persist.rtc_local_time", false);
+    if (rtc_local_time) {
+        if (!localtime_r(&tv->tv_sec, &tm)) {
+            ALOGV("localtime_r() failed: %s", strerror(errno));
+            return -1;
+        }
+    } else {
+        if (!gmtime_r(&tv->tv_sec, &tm)) {
+            ALOGV("gmtime_r() failed: %s", strerror(errno));
+            return -1;
+        }
     }
 
     struct rtc_time rtc = {};
