From 912fccaa411b7d6ab28a208d1f72ef0ae58bb35f Mon Sep 17 00:00:00 2001
From: youling257 <youling257@gmail.com>
Date: Fri, 7 Jul 2017 00:32:52 +0800
Subject: [PATCH 024/100] ANDROID: Paranoid network Bluetooth

Signed-off-by: youling257 <youling257@gmail.com>
---
 net/Kconfig                  |  6 ++++++
 net/bluetooth/af_bluetooth.c | 29 +++++++++++++++++++++++++++++
 2 files changed, 35 insertions(+)

diff --git a/net/Kconfig b/net/Kconfig
index 8cea808ad9e8..d270d39c6a1a 100644
--- a/net/Kconfig
+++ b/net/Kconfig
@@ -98,6 +98,12 @@ source "net/mptcp/Kconfig"
 
 endif # if INET
 
+config ANDROID_PARANOID_NETWORK
+	bool "Only allow certain groups to create sockets"
+	default y
+	help
+		none
+
 config NETWORK_SECMARK
 	bool "Security Marking"
 	help
diff --git a/net/bluetooth/af_bluetooth.c b/net/bluetooth/af_bluetooth.c
index 1661979b6a6e..b4da5e8b3fd2 100644
--- a/net/bluetooth/af_bluetooth.c
+++ b/net/bluetooth/af_bluetooth.c
@@ -108,11 +108,40 @@ void bt_sock_unregister(int proto)
 }
 EXPORT_SYMBOL(bt_sock_unregister);
 
+#ifdef CONFIG_PARANOID_NETWORK
+static inline int current_has_bt_admin(void)
+{
+	return !current_euid();
+}
+
+static inline int current_has_bt(void)
+{
+	return current_has_bt_admin();
+}
+# else
+static inline int current_has_bt_admin(void)
+{
+	return 1;
+}
+
+static inline int current_has_bt(void)
+{
+	return 1;
+}
+#endif
+
 static int bt_sock_create(struct net *net, struct socket *sock, int proto,
 			  int kern)
 {
 	int err;
 
+	if (proto == BTPROTO_RFCOMM || proto == BTPROTO_SCO ||
+			proto == BTPROTO_L2CAP) {
+		if (!current_has_bt())
+			return -EPERM;
+	} else if (!current_has_bt_admin())
+		return -EPERM;
+
 	if (net != &init_net)
 		return -EAFNOSUPPORT;
 
-- 
2.17.1

