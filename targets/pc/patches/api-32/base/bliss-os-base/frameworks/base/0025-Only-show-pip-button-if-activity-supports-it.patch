From 169472e229c246536ba4b209d1f5879eb285fe30 Mon Sep 17 00:00:00 2001
From: utzcoz <utzcoz@outlook.com>
Date: Sat, 31 Oct 2020 13:52:32 +0800
Subject: [PATCH 25/42] Only show pip button if activity supports it

Signed-off-by: utzcoz <utzcoz@outlook.com>
Change-Id: I1512f35a90592c247c230461bee8b882c5df98dd

Conflicts:
	core/java/android/app/Activity.java
	core/java/com/android/internal/widget/DecorCaptionView.java
---
 core/java/android/app/Activity.java               | 10 ++++++++++
 .../android/internal/widget/DecorCaptionView.java | 15 +++++++++++++++
 2 files changed, 25 insertions(+)

diff --git a/core/java/android/app/Activity.java b/core/java/android/app/Activity.java
index 5bbd774b67fb..09e0dd177ecd 100644
--- a/core/java/android/app/Activity.java
+++ b/core/java/android/app/Activity.java
@@ -3946,6 +3946,16 @@ public class Activity extends ContextThemeWrapper
         ActionBar actionBar = getActionBar();
         return (actionBar != null && actionBar.onKeyShortcut(keyCode, event));
     }
+    // region @bliss
+    /**
+     * Check whether the activity supports pip.
+     * @see android.R.attr#supportsPictureInPicture
+     * @hide
+     */
+    public boolean supportPictureInPictureMode() {
+        return mActivityInfo != null && mActivityInfo.supportsPictureInPicture();
+    }
+    // endregion
 
     /**
      * Called when a touch screen event was not handled by any of the views
diff --git a/core/java/com/android/internal/widget/DecorCaptionView.java b/core/java/com/android/internal/widget/DecorCaptionView.java
index efe67b5158a4..45e535765cd8 100644
--- a/core/java/com/android/internal/widget/DecorCaptionView.java
+++ b/core/java/com/android/internal/widget/DecorCaptionView.java
@@ -147,7 +147,12 @@ public class DecorCaptionView extends ViewGroup implements View.OnTouchListener,
         // region @boringdroid
         mBack = findViewById(R.id.back_window);
         // endregion
+        // region @bliss
         mPip = findViewById(R.id.pip_window);
+        if (mPip != null && !supportPip()) {
+            mPip.setVisibility(View.GONE);
+        }
+        // endregion
         mMinimize = findViewById(R.id.minimize_window);
         mMaximize = findViewById(R.id.maximize_window);
         mClose = findViewById(R.id.close_window);
@@ -366,6 +371,15 @@ public class DecorCaptionView extends ViewGroup implements View.OnTouchListener,
             callback.toggleFreeformWindowingMode();
         }
     }
+    // region @bliss
+    private boolean supportPip() {
+        Window.WindowControllerCallback callback = mOwner.getWindowControllerCallback();
+        if (callback instanceof Activity) {
+            Activity activity = (Activity) callback;
+            return activity.supportPictureInPictureMode();
+        }
+        return false;
+    }
 
     private void minimizeWindow() {
         Window.WindowControllerCallback callback = mOwner.getWindowControllerCallback();
@@ -380,6 +394,7 @@ public class DecorCaptionView extends ViewGroup implements View.OnTouchListener,
 			callback.enterPictureInPictureModeIfPossible(); /* Send the task to PIP mode if the task supports it. */
 		}
     }
+    // endregion
 
     public boolean isCaptionShowing() {
         return mShow;
-- 
2.34.1

